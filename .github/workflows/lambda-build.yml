name: Deploy Lambda and SNS via SAM
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # OIDC token permissions
      contents: read    # Permissions to access the repository contents

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Step 3: Configure AWS credentials using OIDC
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-1

    # Step 4: Install AWS SAM CLI
    - name: Install AWS SAM CLI
      run: |
        pip install aws-sam-cli

    # Step 5: Check SAM CLI version
    - name: Check SAM CLI version
      run: sam --version

    # Step 6: Check S3 Bucket Name
    - name: Debug S3 Bucket Name
      run: echo "S3 Bucket aws-sam-lambda-20241021"

    # Step 7: List S3 Buckets (to verify access)
    - name: List S3 Buckets
      run: aws s3 ls

    # Step 8: Package SAM application (with full path to SAM CLI)
    - name: Package SAM application (hardcoded)
      run: /home/runner/.local/bin/sam package \
        --output-template-file packaged.yaml \
        --s3-bucket aws-sam-lambda-20241021

    # Step 9: Package SAM application (debugging)
    - name: Package SAM application (debug)
      run: /home/runner/.local/bin/sam package \
        --output-template-file packaged.yaml \
        --s3-bucket aws-sam-lambda-20241021 --debug

    # Step 10: Deploy SAM application
    - name: Deploy SAM application
      run: sam deploy \
        --template-file packaged.yaml \
        --stack-name sam-lambda-sns-stack \
        --capabilities CAPABILITY_IAM \
        --parameter-overrides \
          SnsMetricTopicArn=${{ secrets.SNS_METRIC_TOPIC_ARN }} \
          SnsQueryTopicArn=${{ secrets.SNS_QUERY_TOPIC_ARN }} \
          LambdaRoleArn=${{ secrets.LAMBDA_ROLE_ARN }} \
          SlackWebhookUrl=${{ secrets.SLACK_WEBHOOK_URL }}
